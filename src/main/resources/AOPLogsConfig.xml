<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        ">
 
    <!-- Scans the classpath for annotated components that will be auto-registered as Spring beans -->
    <!--  <context:component-scan base-package="hu.daniel.hari.learn.spring.aop.profiling" /> -->
    <!-- Activates various annotations to be detected in bean classes e.g: @Autowired -->
    <context:annotation-config />
 
    <!-- AOP Configuration for profiling -->
	<!-- <aop:around pointcut="execution(* com.infy.olam.services.*.*(..))" -->
	<!-- Our profiler class that we want to use to measure process time of service 
		methods. -->
	<bean id="logInterceptor" class="com.security.authorization.util.MethodInterceptor" />
	<aop:config proxy-target-class="true">

		<!-- order=100 to start this before other aspects like @Transactional and 
			@Cacheable but should be after @Async -->
		<aop:aspect ref="logInterceptor" order="100">
			<aop:around pointcut="@annotation(olamScfLog)" method="invoke" />
			<aop:around pointcut="execution(* com.olam.scf.authorization.service.*.*(..))"
				method="logTime" />
		</aop:aspect>
	</aop:config>

 
</beans>